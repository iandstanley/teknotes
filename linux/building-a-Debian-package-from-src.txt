
# How to build a packages from source and applying bug fix patches

## Scenario:

We have a problem in production where a bug has been identified in
the current version of "proftpd", for example, and a fix has been
applied to a future version of the source code. Debian has yet to
get the patch applied to the current version of 'proftpd' and we
decide as this is affecting production we should build the package
from source adding the patch manually.

## Building a source package and patching it

On your build machine we need to install the build essentials and
the dev scripts.

$ sudo apt install dpkg-dev
$ sudo apt install devscripts

We will need the sources to build: 

$ sudo -e /etc/apt/sources.list

And ensure that you have the line:

deb-src http://ftp.se.debian.org/debian/ buster main
deb-src http://security.debian.org/debian-security buster/updates main
deb-src http://ftp.se.debian.org/debian/ buster-updates main

$ sudo apt update 

Get the source code (note no sudo required as the files will be
placed in your own directory):

$ apt source proftpd-basic

Lets examine the source tree:

$ ls -F
  
  proftpd-dsfg-1.3.6/    
  proftpd-dsfg_1.3.6-debian10us5.dsc9
  proftpd-dsfgs_-1.3.6-4+deb10u5.debian.tar.xz      
  proftpd-dsfg_1.3.6-debian10us5.dsc9

### Patching the source code

The source tree is now 

      proftpd-dsfg-1.3.6/
         |
         +--- debian
                |
                +-- patches  

If we had downloaded the source tarball from the authors website
you would be missing the patches Debian applies for fixes and
security and platform issues.

However, because we downloaded the source package from Debian's
source repos we have all of the Debian supplied patches.

In our directory, we have a source directory and the original source
from the authors. We also have an archive *.debian.tar.xz of the
Debian written patches. These patches have been extracted into a
subdirectory of the source directory called 'debian'. Using the
command 'apt source', apt gets these patches and applies them to
the source code from the authors.

We can now look at the GitHub repo for proftpd and look for the
patch/pull request that fixed the issue we are having. We can then
apply these changes manually to the source code. Alternately, the
authors may have supplied a patch from your current version to fix
this. We could also generate a patch with 'git diff' between the
version you pulled down from the Debian source repositories and the
GitHub commit that fixed these issues.

In our example, we find that we need to change a few 'if' statements
to include another check for an error code. We find the file is in
src/data.c in the source code directory. We edit our source code
files.  If the changes are extensive it is better to use a patch
file.

Once all the changes have been applied the package is ready to be
built.  We have downloaded the source code and applied the Debian
patches. We have also applied the extra patch to handle the bug we
are experiencing and now we need to build the package.

Before we can build the package we need the dependencies as well.

$ sudo apt build-dep proftpd-basic

This command will install everything you need to build the package
(This is likely to be more than the dependencies required to run
the package because it will install all the development libraries
you need).

Now for the actual build:

$ dpkg-buildpackage -rfakeroot -b -uc -

The '-rfakeroot' allows us to use the package in our environment
without actually installing it in our environment. The '-b' means
to build the binary package only. The '-us' is to not do a cryptography
sign on the source package, and '-uc' is to not sign the .buildinfo
and .changes files.

Then dpkg-buildpackage will build a series of packages. It has built
the proftpd-basic package, another one with the debugging symbols
included.  A third package proftpd-dev. The is also a proftpd-doc
package and a bunch of different modules. These packages are almost
exactly the same as you would download from Debian but they are not
signed and they have the code modifications I made.

We can now copy the .deb package to the server.

$ scp proftpd-basic_1.3.6-4+deb10u5_amd64.deb me@server:  

We then ssh into the server and install:

$ sudo dpkg -i proftpd-basic_1.3.6-4+deb10u5_amd64.deb 

Now we will have some dependencies that are missing, so:

$ sudo apt install -f 

This will fix any missing dependencies.




